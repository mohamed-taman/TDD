<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ MIT License
  ~
  ~     Copyright (c) 2019  Mohamed Mahmoud Taman - Sirius-X Innovations
  ~
  ~     Permission is hereby granted, free of charge, to any person obtaining a copy
  ~     of this software and associated documentation files (the "Software"), to deal
  ~     in the Software without restriction, including without limitation the rights
  ~     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  ~     copies of the Software, and to permit persons to whom the Software is
  ~     furnished to do so, subject to the following conditions:
  ~
  ~     The above copyright notice and this permission notice shall be included in all
  ~     copies or substantial portions of the Software.
  ~
  ~     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  ~     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  ~     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  ~     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  ~     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  ~     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  ~     SOFTWARE.

  ~     Author: Mohamed Taman
  -->
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>rs.com.tm.siriusxi</groupId>
    <artifactId>RomanConverter</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Roman Converter Application</name>

    <!--Project Owner & team-->
    <developers>
        <developer>
            <id>0001</id>
            <name>Mohamed Taman</name>
            <email>momahed.taman@gmail.com</email>
            <roles>
                <role>
                    Sr. Enterprise Architect
                </role>
                <role>
                    Sr. Lead Engineer
                </role>
            </roles>
        </developer>
    </developers>

    <!-- GPL source repository -->
    <scm>
        <connection>scm:git:https://github.com/mohamed-taman/TDD.git</connection>
        <developerConnection>scm:git:git@github.com:mohamed-taman/TDD.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    <!-- GPL source issue management -->
    <issueManagement>
        <system>Github</system>
        <url>https://github.com/mohamed-taman/TDD/issues</url>
    </issueManagement>
    <dependencies>
        <!-- Logback logging lib -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.3.12</version>
        </dependency>
        <!-- Test -->
        <!-- JUnit 5 -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Mockito 5 -->
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>2.25.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <!--findbugs annotations-->
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>annotations</artifactId>
            <version>3.0.1u2</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.google.code.findbugs</groupId>
            <artifactId>jsr305</artifactId>
            <version>3.0.2</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compiler configurations -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <!-- Silent the warning: [WARNING] No processor claimed any
                    of these annotations -->
                    <compilerArgument>-Xlint:-processing</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <!-- Test cases runner -->
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M3</version>
                <configuration>
                    <argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
                    <skipTests>${skipTests}</skipTests>
                </configuration>
            </plugin>
            <!-- check style the code - For code conventions and style -->
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.0</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>[8.18,)</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>verify</phase>
                        <configuration>
                            <excludes>**/model/**/*</excludes>
                            <configLocation>src/main/resources/config/mvn/sun_checks.xml
                            </configLocation>
                            <!-- FIXME Specifies more than one check style -->
                            <!--<configLocation>src/main/resources/config/mvn/google_checks.xml</configLocation>-->
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- FindBugs Maven Plugin - Finding potential bugs -->
            <!-- FIXME I have to avoid this problem NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD in omit visitors -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.5</version>
                <configuration>
                    <onlyAnalyze>rs.com.tm.siriusxi.tdd.roman.*</onlyAnalyze>

                    <!-- Enables analysis which takes more memory but finds more bugs.
                    If you run out of memory, changes the value of the effort element
                    to 'Low'.-->
                    <effort>Max</effort>
                    <!--Reports all bugs (other values are medium and max)-->
                    <threshold>low</threshold>
                    <!--Produces XML report-->
                    <xmlOutput>true</xmlOutput>
                    <!--Configures the directory in which the XML report is created-->
                    <findbugsXmlOutputDirectory>${project.build.directory}/findbugs
                    </findbugsXmlOutputDirectory>
                    <!--<omitVisitors>NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD</omitVisitors>-->
                    <includeTests>true</includeTests>
                </configuration>
                <executions>
                    <!--Ensures that FindBugs inspects source code when project is compiled.-->
                    <execution>
                        <id>analyze-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- SpotBugs Static Analysis - For security audits of Java web applications  -->
            <plugin>
                <groupId>com.github.spotbugs</groupId>
                <artifactId>spotbugs-maven-plugin</artifactId>
                <version>3.1.10</version>
                <configuration>
                    <includeTests>true</includeTests>
                    <effort>Max</effort>
                    <threshold>Low</threshold>
                    <failOnError>true</failOnError>
                    <includeFilterFile>src/main/resources/config/mvn/spotbugs-security-include.xml
                    </includeFilterFile>
                    <excludeFilterFile>src/main/resources/config/mvn/spotbugs-security-exclude.xml
                    </excludeFilterFile>
                    <plugins>
                        <plugin>
                            <groupId>com.h3xstream.findsecbugs</groupId>
                            <artifactId>findsecbugs-plugin</artifactId>
                            <version>1.8.0
                            </version> <!-- LATEST - Means Auto-update to the latest stable -->
                        </plugin>
                    </plugins>
                </configuration>
                <executions>
                    <!--Ensures that find Security Bugs inspects source code when project is compiled.-->
                    <execution>
                        <id>analyze-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <!-- PMD maven plugin - For best code practice -->
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.11.0</version>
                <configuration>
                    <linkXRef>false</linkXRef>
                    <!-- this is actually true by default, but can be disabled -->
                    <failOnViolation>true</failOnViolation>
                    <printFailingErrors>true</printFailingErrors>
                    <!-- enable incremental analysis -->
                    <analysisCache>true</analysisCache>
                    <!-- Optional: points to this location by default -->
                    <analysisCacheLocation>${project.build.directory}/pmd/pmd.cache
                    </analysisCacheLocation>
                    <targetJdk>1.8</targetJdk>
                </configuration>
                <executions>
                    <execution>
                        <id>analyze-compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <!-- Reporting plugin -->
    <reporting>
        <plugins>
            <!-- FindBugs Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
                <version>3.0.5</version>
                <configuration>
                    <onlyAnalyze>rs.com.tm.siriusxi.tdd.roman.*</onlyAnalyze>
                    <xmlOutput>true</xmlOutput>
                    <!-- Optional directory to put findbugs xdoc xml report -->
                    <xmlOutputDirectory>target/site</xmlOutputDirectory>
                </configuration>
            </plugin>
            <!-- checkstyle the code -->
            <plugin>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>3.0.0</version>
                <configuration>
                    <configLocation>src/main/resources/config/mvn/sun_checks.xml</configLocation>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <!-- PMD reporting tool -->
            <plugin>
                <artifactId>maven-pmd-plugin</artifactId>
                <version>3.11.0</version>
            </plugin>
        </plugins>
    </reporting>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <!--
            This should be enabled in production or configure command line to
            run mvn as the following "mvn install -DskipTests=false"
        -->
        <skipTests>false</skipTests>
        <!-- Testing related properties -->
        <junit.jupiter.version>5.4.0-RC1</junit.jupiter.version>
    </properties>

</project>